!function(n){var e={};function t(o){if(e[o])return e[o].exports;var a=e[o]={i:o,l:!1,exports:{}};return n[o].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=n,t.c=e,t.d=function(n,e,o){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:o})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(o,a,function(e){return n[e]}.bind(null,a));return o},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="/bundles/administration/",t(t.s="W9ZO")}({"2tlJ":function(n,e){n.exports='{% block job_listing_page %}\n    <sw-page class="swag-example-list">\n        <template slot="content">\n            <job-listing-index ref="jobListing"\n                               :autoReloadInterval="60000"\n                               :jobTypes="nostoJobTypes">\n\n            </job-listing-index>\n        </template>\n        <template #sidebar>\n            <sw-sidebar>\n                {% block sw_jobs_list_sidebar_refresh %}\n                    <sw-sidebar-item\n                            icon="default-arrow-360-left"\n                            :title="$tc(\'sw-product.list.titleSidebarItemRefresh\')"\n                            @click="onRefresh"\n                    />\n                {% endblock %}\n            </sw-sidebar>\n        </template>\n    </sw-page>\n{% endblock %}'},"6Rti":function(n,e){n.exports='{% block nosto_integration_content_card_channel_config_accounts_card %}\n    <sw-card class="sw-card--grid"\n             title="Tags assignment">\n\n        {% block nosto_integration_settings_tag_1 %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.settings.tag1\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.settings.tag1\']"\n                                :label="$tc(\'nosto.configuration.tagAssignment.tag1title\')">\n\n                <template #content="props">\n\n                    <sw-single-select name="NostoIntegration.settings.tag1"\n                                      labelProperty="name"\n                                      valueProperty="id"\n                                      :options="productCustomFields"\n                                      :isInherited="props.isInherited"\n                                      :disabled="props.isInherited"\n                                      show-clearable-button\n                                      :value="props.currentValue"\n                                      @change="props.updateCurrentValue">\n                    </sw-single-select>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_settings_tag_2 %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.settings.tag2\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.settings.tag2\']"\n                                :label="$tc(\'nosto.configuration.tagAssignment.tag2title\')">\n\n                <template #content="props">\n\n                    <sw-single-select name="NostoIntegration.settings.tag2"\n                                      labelProperty="name"\n                                      valueProperty="id"\n                                      :options="productCustomFields"\n                                      :isInherited="props.isInherited"\n                                      :disabled="props.isInherited"\n                                      show-clearable-button\n                                      :value="props.currentValue"\n                                      @change="props.updateCurrentValue">\n                    </sw-single-select>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_settings_tag_3 %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.settings.tag3\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.settings.tag3\']"\n                                :label="$tc(\'nosto.configuration.tagAssignment.tag3title\')">\n\n                <template #content="props">\n\n                    <sw-single-select name="NostoIntegration.settings.tag3"\n                                      labelProperty="name"\n                                      valueProperty="id"\n                                      :options="productCustomFields"\n                                      :isInherited="props.isInherited"\n                                      :disabled="props.isInherited"\n                                      show-clearable-button\n                                      :value="props.currentValue"\n                                      @change="props.updateCurrentValue">\n                    </sw-single-select>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_settings_tag_gtin %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.settings.gtin\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.settings.gtin\']"\n                                :label="$tc(\'nosto.configuration.tagAssignment.gtinTitle\')">\n\n                <template #content="props">\n\n                    <sw-single-select name="NostoIntegration.settings.gtin"\n                                      labelProperty="name"\n                                      valueProperty="id"\n                                      :options="productCustomFields"\n                                      :isInherited="props.isInherited"\n                                      :disabled="props.isInherited"\n                                      show-clearable-button\n                                      :value="props.currentValue"\n                                      @change="props.updateCurrentValue">\n                    </sw-single-select>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_settings_tag_google_category %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.settings.googleCategory\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.settings.googleCategory\']"\n                                :label="$tc(\'nosto.configuration.tagAssignment.googleCategoryTitle\')">\n\n                <template #content="props">\n\n                    <sw-single-select name="NostoIntegration.settings.googleCategory"\n                                      labelProperty="name"\n                                      valueProperty="id"\n                                      :options="productCustomFields"\n                                      :isInherited="props.isInherited"\n                                      :disabled="props.isInherited"\n                                      show-clearable-button\n                                      :value="props.currentValue"\n                                      @change="props.updateCurrentValue">\n                    </sw-single-select>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},EjXN:function(n,e){n.exports='<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="400.000000pt" height="400.000000pt" viewBox="0 0 400.000000 400.000000" preserveAspectRatio="xMidYMid meet"><g transform="translate(0.000000,400.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none"><path d="M1132 3124 c-162 -43 -295 -194 -324 -366 -39 -237 128 -473 366 -517 33 -6 136 -11 230 -11 l170 0 -286 -288 c-326 -327 -333 -336 -332 -462 0 -61 5 -84 26 -125 34 -63 305 -334 368 -366 64 -34 186 -34 250 -1 29 15 145 123 326 304 l282 281 4 -194 c4 -173 7 -200 28 -254 58 -150 162 -246 309 -287 213 -59 432 44 533 250 l33 67 3 884 2 885 -25 53 c-15 29 -46 70 -71 92 -85 74 -37 71 -988 70 -705 0 -860 -3 -904 -15z m1741 -185 c12 -6 30 -21 39 -33 16 -19 18 -79 18 -847 0 -715 -2 -831 -15 -870 -36 -105 -131 -172 -245 -172 -37 0 -80 6 -101 15 -55 24 -110 78 -135 133 -24 50 -24 51 -24 465 l0 415 -442 -442 c-297 -296 -452 -444 -471 -449 -46 -11 -77 11 -210 144 -125 125 -147 159 -139 208 2 12 198 216 447 465 l444 444 -422 5 c-468 6 -457 4 -535 74 -99 90 -115 231 -38 344 24 34 50 56 95 80 l63 32 825 0 c587 0 831 -3 846 -11z"></path></g></svg>'},IckB:function(n,e){n.exports='{% block nosto_integration_content_card_channel_config_features_flags_card %}\n    <sw-card class="sw-card--grid"\n             :title="$tc(\'nosto.configuration.featuresFlags.cardTitle\')">\n\n        {% block nosto_integration_feature_ratings_reviews %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.ratingsReviews\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.ratingsReviews\']"\n                                :label="$tc(\'nosto.configuration.featuresFlags.enableRatingsReviews\')">\n\n                <template #content="props">\n                    <sw-single-select name="NostoIntegration.feature.flags.ratingsReviews"\n                                      labelProperty="label"\n                                      valueProperty="value"\n                                      :options="createRatingsAndReviewOptions"\n                                      :isInherited="props.isInherited"\n                                      :disabled="props.isInherited"\n                                      show-clearable-button\n                                      :value="props.currentValue"\n                                      @change="props.updateCurrentValue">\n                    </sw-single-select>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_feature_variations %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.variations\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.variations\']">\n\n                <template #content="props">\n                    <sw-switch-field\n                            :map-inheritance="props"\n                            :label="$tc(\'nosto.configuration.featuresFlags.enableVariations\')"\n                            :disabled="props.isInherited"\n                            :value="props.currentValue"\n                            @change="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_feature_product_properties %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.productProperties\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.productProperties\']">\n\n                <template #content="props">\n                    <sw-switch-field\n                            :map-inheritance="props"\n                            :label="$tc(\'nosto.configuration.featuresFlags.enableProductProperties\')"\n                            :disabled="props.isInherited"\n                            :value="props.currentValue"\n                            @change="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_feature_alternate_image %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.alternateImages\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.alternateImages\']">\n\n                <template #content="props">\n                    <sw-switch-field\n                            :map-inheritance="props"\n                            :label="$tc(\'nosto.configuration.featuresFlags.enableAlternateImages\')"\n                            :disabled="props.isInherited"\n                            :value="props.currentValue"\n                            @change="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_feature_inventory %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.inventory\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.inventory\']">\n\n                <template #content="props">\n                    <sw-switch-field\n                            :map-inheritance="props"\n                            :label="$tc(\'nosto.configuration.featuresFlags.enableInventory\')"\n                            :disabled="props.isInherited"\n                            :value="props.currentValue"\n                            @change="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_feature_customer_data %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.customerDataToNosto\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.customerDataToNosto\']">\n\n                <template #content="props">\n                    <sw-switch-field\n                            :map-inheritance="props"\n                            :label="$tc(\'nosto.configuration.featuresFlags.enableCustomerDataToNosto\')"\n                            :disabled="props.isInherited"\n                            :value="props.currentValue"\n                            @change="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_feature_inavtive_products %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.syncInactiveProducts\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.syncInactiveProducts\']">\n\n                <template #content="props">\n                    <sw-switch-field\n                            :map-inheritance="props"\n                            :label="$tc(\'nosto.configuration.featuresFlags.enableSyncInactiveProducts\')"\n                            :disabled="props.isInherited"\n                            :value="props.currentValue"\n                            @change="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_feature_published_date %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.productPublishedDateTagging\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.productPublishedDateTagging\']">\n\n                <template #content="props">\n                    <sw-switch-field\n                            :map-inheritance="props"\n                            :label="$tc(\'nosto.configuration.featuresFlags.enableProductPublishedDateTagging\')"\n                            :disabled="props.isInherited"\n                            :value="props.currentValue"\n                            @change="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n\n        {% block nosto_integration_feature_recommendations %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.feature.flags.reloadRecommendations\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.feature.flags.reloadRecommendations\']">\n\n                <template #content="props">\n                    <sw-switch-field\n                            :map-inheritance="props"\n                            :label="$tc(\'nosto.configuration.featuresFlags.enableReloadRecommendations\')"\n                            :disabled="props.isInherited"\n                            :value="props.currentValue"\n                            @change="props.updateCurrentValue"\n                    />\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n    </sw-card>\n{% endblock %}\n'},SZ7m:function(n,e,t){"use strict";function o(n,e){for(var t=[],o={},a=0;a<e.length;a++){var s=e[a],r=s[0],i={id:n+":"+a,css:s[1],media:s[2],sourceMap:s[3]};o[r]?o[r].parts.push(i):t.push(o[r]={id:r,parts:[i]})}return t}t.r(e),t.d(e,"default",(function(){return f}));var a="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!a)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},r=a&&(document.head||document.getElementsByTagName("head")[0]),i=null,l=0,c=!1,u=function(){},g=null,p="data-vue-ssr-id",d="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function f(n,e,t,a){c=t,g=a||{};var r=o(n,e);return h(r),function(e){for(var t=[],a=0;a<r.length;a++){var i=r[a];(l=s[i.id]).refs--,t.push(l)}e?h(r=o(n,e)):r=[];for(a=0;a<t.length;a++){var l;if(0===(l=t[a]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete s[l.id]}}}}function h(n){for(var e=0;e<n.length;e++){var t=n[e],o=s[t.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](t.parts[a]);for(;a<t.parts.length;a++)o.parts.push(b(t.parts[a]));o.parts.length>t.parts.length&&(o.parts.length=t.parts.length)}else{var r=[];for(a=0;a<t.parts.length;a++)r.push(b(t.parts[a]));s[t.id]={id:t.id,refs:1,parts:r}}}}function m(){var n=document.createElement("style");return n.type="text/css",r.appendChild(n),n}function b(n){var e,t,o=document.querySelector("style["+p+'~="'+n.id+'"]');if(o){if(c)return u;o.parentNode.removeChild(o)}if(d){var a=l++;o=i||(i=m()),e=v.bind(null,o,a,!1),t=v.bind(null,o,a,!0)}else o=m(),e=_.bind(null,o),t=function(){o.parentNode.removeChild(o)};return e(n),function(o){if(o){if(o.css===n.css&&o.media===n.media&&o.sourceMap===n.sourceMap)return;e(n=o)}else t()}}var w,C=(w=[],function(n,e){return w[n]=e,w.filter(Boolean).join("\n")});function v(n,e,t,o){var a=t?"":o.css;if(n.styleSheet)n.styleSheet.cssText=C(e,a);else{var s=document.createTextNode(a),r=n.childNodes;r[e]&&n.removeChild(r[e]),r.length?n.insertBefore(s,r[e]):n.appendChild(s)}}function _(n,e){var t=e.css,o=e.media,a=e.sourceMap;if(o&&n.setAttribute("media",o),g.ssrId&&n.setAttribute(p,e.id),a&&(t+="\n/*# sourceURL="+a.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},W9ZO:function(n,e,t){"use strict";t.r(e);var o,a=(o=t("ig95")).keys().reduce((function(n,e){var t={name:e.split(".")[1].split("/")[1],functional:!0,render:function(n,t){var a=t.data;return n("span",{class:[a.staticClass,a.class],style:a.style,attrs:a.attrs,on:a.on,domProps:{innerHTML:o(e)}})}};return n.push(t),n}),[]),s=Shopware.Component,r=(a.map((function(n){return s.register(n.name,n)})),t("eCCZ")),i=t.n(r),l=(t("dY65"),Shopware),c=l.Component,u=l.Defaults,g=Shopware.Data.Criteria;c.register("nosto-integration-settings",{template:i.a,inject:["repositoryFactory"],data:function(){return{isLoading:!1,isSaveSuccessful:!1,defaultAccountNameFilled:!1,messageAccountBlankErrorState:null,config:null,salesChannels:[]}},metaInfo:function(){return{title:this.$createTitle()}},created:function(){this.createdComponent()},watch:{config:{handler:function(){this.$refs.configComponent.allConfigs.null,this.$refs.configComponent.selectedSalesChannelId},deep:!0}},computed:{salesChannelRepository:function(){return this.repositoryFactory.create("sales_channel")}},methods:{createdComponent:function(){this.getSalesChannels()},onChangeLanguage:function(){this.getSalesChannels()},getSalesChannels:function(){var n=this;this.isLoading=!0;var e=new g;e.addFilter(g.equalsAny("typeId",[u.storefrontSalesChannelTypeId,u.apiSalesChannelTypeId])),this.salesChannelRepository.search(e,Shopware.Context.api).then((function(e){e.add({id:null,translated:{name:n.$tc("sw-sales-channel-switch.labelDefaultOption")}}),n.salesChannels=e})).finally((function(){n.isLoading=!1}))},onSave:function(){var n=this;this.isLoading=!0,this.$refs.configComponent.save().then((function(){n.isSaveSuccessful=!0})).finally((function(){n.isLoading=!1}))}}});var p=t("6Rti"),d=t.n(p);function f(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null==t)return;var o,a,s=[],r=!0,i=!1;try{for(t=t.call(n);!(r=(o=t.next()).done)&&(s.push(o.value),!e||s.length!==e);r=!0);}catch(n){i=!0,a=n}finally{try{r||null==t.return||t.return()}finally{if(i)throw a}}return s}(n,e)||function(n,e){if(!n)return;if("string"==typeof n)return h(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);"Object"===t&&n.constructor&&(t=n.constructor.name);if("Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return h(n,e)}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}var m=Shopware,b=m.Component,w=(m.Mixin,m.Context,Shopware.Data.Criteria);b.register("nosto-integration-settings-general",{template:d.a,inject:["repositoryFactory"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},data:function(){return{isLoading:!1,productCustomFields:[]}},computed:{customFieldSetRepository:function(){return this.repositoryFactory.create("custom_field_set")}},created:function(){this.getProductCustomFields(),this.createdComponent()},methods:{createdComponent:function(){for(var n="NostoIntegration.settings.",e=0,t=Object.entries({tag1:null,tag2:null,tag3:null,gtin:null,googleCategory:null});e<t.length;e++){var o=f(t[e],2),a=o[0],s=o[1];void 0===this.allConfigs.null[n+a]&&this.$set(this.allConfigs.null,n+a,s)}},getProductCustomFields:function(){var n=this,e=new w;return e.addFilter(w.equals("relations.entityName","product")).addAssociation("customFields").addAssociation("relations"),this.customFieldSetRepository.search(e,Shopware.Context.api).then((function(e){e.forEach((function(e){e.customFields.forEach((function(e){n.productCustomFields.push({name:e.name,id:e.name})}))}))}))}}});var C=t("Y185"),v=t.n(C),_=Shopware.Component,y=Shopware.Data.Criteria;_.register("nosto-integration-account-general",{template:v.a,inject:["repositoryFactory"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},data:function(){return{configPath:"NostoIntegration.settings.accounts",isLoading:!1,systemLanguages:[]}},created:function(){this.createdComponent()},computed:{languageRepository:function(){return this.repositoryFactory.create("language")},accountNames:{get:function(){return this.allConfigs[this.selectedSalesChannelId]["StylaCmsIntegration.settings.accounts"]}}},methods:{createdComponent:function(){var n=this;this.isLoading=!0;var e=new y;e.addSorting(y.sort("createdAt","ASC")),this.languageRepository.search(e,Shopware.Context.api).then((function(e){n.systemLanguages=e,n.initLanguageConfig()})).finally((function(){n.isLoading=!1}))},initLanguageConfig:function(){void 0===this.allConfigs[this.selectedSalesChannelId][this.configPath]&&this.$set(this.allConfigs[this.selectedSalesChannelId],"NostoIntegration.settings.accounts",{})},checkTextFieldInheritance:function(n){return"string"!=typeof n||n.length<=0}}});var I=t("X71U"),k=t.n(I);Shopware.Component.register("nosto-plugin-settings-icon",{template:k.a});var S=t("2tlJ"),N=t.n(S);Shopware.Component.register("nosto-job-listing",{template:N.a,computed:{nostoJobTypes:function(){return["od-nosto-full-catalog-sync","od-nosto-marketing-permission-sync","od-nosto-order-sync","od-nosto-product-sync"]}},methods:{onRefresh:function(){this.$refs.jobListing.onRefresh()}}});var T=t("IckB"),D=t.n(T);function P(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null==t)return;var o,a,s=[],r=!0,i=!1;try{for(t=t.call(n);!(r=(o=t.next()).done)&&(s.push(o.value),!e||s.length!==e);r=!0);}catch(n){i=!0,a=n}finally{try{r||null==t.return||t.return()}finally{if(i)throw a}}return s}(n,e)||function(n,e){if(!n)return;if("string"==typeof n)return R(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);"Object"===t&&n.constructor&&(t=n.constructor.name);if("Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return R(n,e)}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}Shopware.Component.register("nosto-integration-features-flags",{template:D.a,inject:["repositoryFactory"],props:{actualConfigData:{type:Object,required:!0},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},data:function(){return{isLoading:!1,propertyGroups:[]}},computed:{createRatingsAndReviewOptions:function(){return[{label:this.$tc("nosto.configuration.featuresFlags.ratingsOptions.shopwareRatings"),value:"shopware-ratings"},{label:this.$tc("nosto.configuration.featuresFlags.ratingsOptions.noRatings"),value:"no-ratings"}]}},created:function(){this.createdComponent()},methods:{createdComponent:function(){for(var n="NostoIntegration.feature.flags.",e=0,t=Object.entries({variations:!0,productProperties:!0,alternateImages:!0,ratingsReviews:"shopware-ratings",inventory:!1,customerDataToNosto:!0,syncInactiveProducts:!1,productPublishedDateTagging:!1,reloadRecommendations:!1});e<t.length;e++){var o=P(t[e],2),a=o[0],s=o[1];void 0===this.allConfigs.null[n+a]&&this.$set(this.allConfigs.null,n+a,s)}}}});var V=t("oPj4"),A=t("gh+G");Shopware.Module.register("nosto-integration",{type:"plugin",name:"nosto-integration",title:"nosto.title",description:"nosto.description",color:"#ffd53d",icon:"small-default-stack-line2",snippets:{"en-GB":V,"de-DE":A},routes:{list:{component:"nosto-job-listing",path:"list"},settings:{component:"nosto-integration-settings",path:"settings",meta:{parentPath:"sw.settings.index.plugins"}}},settingsItem:{group:"plugins",to:"nosto.integration.settings",iconComponent:"nosto-plugin-settings-icon",backgroundEnabled:!0},navigation:[{label:"Nosto jobs list",color:"#ff3d58",path:"nosto.integration.list",icon:"default-object-marketing",parent:"sw-marketing",position:100}]})},X71U:function(n,e){n.exports='{% block nosto_plugin_settings_icon %}\n    <sw-icon style="width: 30px; height: 30px;" name="nosto-plugin-settings"></sw-icon>\n{% endblock %}\n'},Y185:function(n,e){n.exports='{% block nosto_integration_account_component_general %}\n    <sw-card title="Account settings">\n        {% block nosto_integration_account_id %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.settings.accounts.accountID\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.settings.accounts.accountID\']"\n                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                <template #content="props">\n                    <sw-field\n                            :label="$tc(\'nosto.configuration.account.idTitle\')"\n                            type="text"\n                            :map-inheritance="props"\n                            :value="props.currentValue"\n                            :disabled="props.isInherited"\n                            required\n                            name="NostoIntegration.settings.accounts.accountID"\n                            @input="props.updateCurrentValue"></sw-field>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n        {% block nosto_integration_account_token %}\n            <sw-inherit-wrapper v-model="actualConfigData[\'NostoIntegration.settings.accounts.productToken\']"\n                                :inheritedValue="selectedSalesChannelId === null ? null : allConfigs[\'null\'][\'NostoIntegration.settings.accounts.productToken\']"\n                                :customInheritationCheckFunction="checkTextFieldInheritance">\n                <template #content="props">\n                    <sw-field\n                            :label="$tc(\'nosto.configuration.account.tokenTitle\')"\n                            type="password"\n                            :map-inheritance="props"\n                            :value="props.currentValue"\n                            :disabled="props.isInherited"\n                            required\n                            name="NostoIntegration.settings.accounts.productToken"\n                            @input="props.updateCurrentValue"></sw-field>\n                </template>\n            </sw-inherit-wrapper>\n        {% endblock %}\n    </sw-card>\n{% endblock %}'},"ZzA/":function(n,e,t){},dY65:function(n,e,t){var o=t("ZzA/");"string"==typeof o&&(o=[[n.i,o,""]]),o.locals&&(n.exports=o.locals);(0,t("SZ7m").default)("95321fe8",o,!0,{})},eCCZ:function(n,e){n.exports='{% block nosto_integration %}\n    <sw-page class="nosto-integration-settings">\n        {% block nostointegration_header %}\n            <template #smart-bar-header>\n                <h2>\n                    {{ $tc(\'sw-settings.index.title\') }}\n                    <sw-icon name="small-arrow-medium-right" small></sw-icon>\n                    {{ $tc(\'nosto.configuration.title\') }}\n                </h2>\n            </template>\n        {% endblock %}\n        {% block nosto_integration_actions %}\n            <template #smart-bar-actions>\n                {% block nosto_integration_actions_save %}\n                    <sw-button-process v-model="isSaveSuccessful"\n                                       class="sw-settings-login-registration__save-action"\n                                       variant="primary"\n                                       :isLoading="isLoading"\n                                       :disabled="isLoading"\n                                       @click="onSave">\n                        {{ $tc(\'global.default.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n{#        {% block nosto_language_switch %}#}\n{#            <template slot="language-switch">#}\n{#                <sw-language-switch#}\n{#                        slot="language-switch"#}\n{#                        @on-change="onChangeLanguage"#}\n{#                />#}\n{#            </template>#}\n{#        {% endblock %}#}\n\n        {% block nosto_integration_content %}\n            <template #content>\n                {% block nosto_integration_content_card %}\n                    {% block nosto_integration_content_card_channel_config %}\n                        <sw-sales-channel-config v-model="config"\n                                                 ref="configComponent"\n                                                 domain="NostoIntegration.settings">\n                            {% block nosto_integration_content_card_channel_config_sales_channel %}\n                                <template #select="{ onInput, selectedSalesChannelId }">\n                                    {% block nosto_integration_content_card_channel_config_sales_channel_card %}\n                                        <sw-card class="sw-card--grid"\n                                                 :title="$tc(\'global.entities.sales_channel\', 2)">\n                                            <div class="card-container">\n                                                {% block nosto_integration_content_card_channel_config_sales_channel_card_title %}\n                                                    <sw-single-select v-model="selectedSalesChannelId"\n                                                                      labelProperty="translated.name"\n                                                                      valueProperty="id"\n                                                                      :isLoading="isLoading"\n                                                                      :options="salesChannels"\n                                                                      @change="onInput">\n                                                    </sw-single-select>\n                                                {% endblock %}\n                                            </div>\n                                        </sw-card>\n                                    {% endblock %}\n                                </template>\n                            {% endblock %}\n\n                            {% block noto_integration_content_card_configs %}\n                                <template #content="{ actualConfigData, allConfigs, selectedSalesChannelId }">\n                                    <div v-if="actualConfigData">\n\n                                        {% block noto_integration_content_card_account_general %}\n                                            <nosto-integration-account-general\n                                                    :actualConfigData="actualConfigData"\n                                                    :allConfigs="allConfigs"\n                                                    :selectedSalesChannelId="selectedSalesChannelId">\n                                            </nosto-integration-account-general>\n                                        {% endblock %}\n\n                                        {% block noto_integration_content_card_tags_general %}\n                                            <nosto-integration-settings-general\n                                                    :actualConfigData="actualConfigData"\n                                                    :allConfigs="allConfigs"\n                                                    :selectedSalesChannelId="selectedSalesChannelId">\n                                            </nosto-integration-settings-general>\n                                        {% endblock %}\n\n                                        {% block noto_integration_content_card_features_flags %}\n                                            <nosto-integration-features-flags\n                                                    :actualConfigData="actualConfigData"\n                                                    :allConfigs="allConfigs"\n                                                    :selectedSalesChannelId="selectedSalesChannelId">\n                                            </nosto-integration-features-flags>\n                                        {% endblock %}\n                                    </div>\n                                </template>\n                            {% endblock %}\n                        </sw-sales-channel-config>\n                    {% endblock %}\n                    {% block styla_cmsintegration_content_card_loading %}\n                        <sw-loader v-if="isLoading"></sw-loader>\n                    {% endblock %}\n                {% endblock %}\n            </template>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'},"gh+G":function(n){n.exports=JSON.parse('{"nosto":{"title":"Nosto","description":"Nosto integration","menu":{"title":"Nosto configuration"},"configuration":{"title":"Nosto configuration","tagAssignment":{"tag1title":"Tag 1","tag2title":"Tag 2","tag3title":"Tag 3","gtinTitle":"GTIN","googleCategoryTitle":"Google category"},"account":{"idTitle":"Account ID","tokenTitle":"Token"},"featuresFlags":{"cardTitle":"Features flags","ratingsOptions":{"shopwareRatings":"Shopware ratings","noRatings":"No ratings"},"enableVariations":"Enable variations","enableProductProperties":"Enable product properties","enableAlternateImages":"Enable Alternate Images","enableRatingsReviews":"Enable Ratings & Reviews","enableInventory":"Enable Inventory Levels","enableCustomerDataToNosto":"Send Customer Data To Nosto","enableSyncInactiveProducts":"Sync Inactive Products","enableProductPublishedDateTagging":"Enable Product Published Date Tagging","enableReloadRecommendations":"Reload Recommendations After Adding"}}}}')},ig95:function(n,e,t){var o={"./icons-nosto-plugin-settings.svg":"EjXN"};function a(n){var e=s(n);return t(e)}function s(n){if(!t.o(o,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return o[n]}a.keys=function(){return Object.keys(o)},a.resolve=s,n.exports=a,a.id="ig95"},oPj4:function(n){n.exports=JSON.parse('{"nosto":{"title":"Nosto","description":"Nosto integration","menu":{"title":"Nosto configuration"},"configuration":{"title":"Nosto configuration","tagAssignment":{"tag1title":"Tag 1","tag2title":"Tag 2","tag3title":"Tag 3","gtinTitle":"GTIN","googleCategoryTitle":"Google category"},"account":{"idTitle":"Account ID","tokenTitle":"Token"},"featuresFlags":{"cardTitle":"Features flags","ratingsOptions":{"shopwareRatings":"Shopware ratings","noRatings":"No ratings"},"enableVariations":"Enable variations","enableProductProperties":"Enable product properties","enableAlternateImages":"Enable Alternate Images","enableRatingsReviews":"Enable Ratings & Reviews","enableInventory":"Enable Inventory Levels","enableCustomerDataToNosto":"Send Customer Data To Nosto","enableSyncInactiveProducts":"Sync Inactive Products","enableProductPublishedDateTagging":"Enable Product Published Date Tagging","enableReloadRecommendations":"Reload Recommendations After Adding"}}}}')}});